Texture2D shaderTexture;
SamplerState SampleType;
Texture2D reflectionTexture;

struct PixelInputType
{
	float4 position : SV_POSITION;
	float2 tex : TEXCOORD0;
	float4 reflectionPosition : TEXCOORD1;
};

float4 ReflectionPixelShader(PixelInputType input) : SV_TARGET
{
	float4 textureColor;
	float2 reflectTexCoord;
	float4 reflectionColor;
	float4 color;
	float flipReflection = 0.5f;
	float distanceReflection = 2.0f;

	textureColor = shaderTexture.Sample(SampleType, input.tex);
	reflectTexCoord.x = input.reflectionPosition.x / input.reflectionPosition.w / distanceReflection + flipReflection;
	reflectTexCoord.y = -input.reflectionPosition.y / input.reflectionPosition.w / distanceReflection + flipReflection;


	reflectionColor = reflectionTexture.Sample(SampleType, reflectTexCoord); 

	return lerp(textureColor, reflectionColor, 0.2f);;
}